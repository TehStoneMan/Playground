// For those who want the bleeding edge
buildscript
{
    repositories
    {
        jcenter()
        maven
        {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies
    {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'

// Define properties file
ext.configFile = file "gradle.properties"

configFile.withReader
{
    // Load config. It shall from now be referenced as simply config or project.config
    def prop = new Properties()
    prop.load(it)
    project.ext.config = new ConfigSlurper().parse prop
}

version = "${config.minecraft_version}-${config.mod_version}"
group = "io.github.thestoneman.playground"
archivesBaseName = "Playground"

// java version
sourceCompatibility = targetCompatibility = '1.8'
compileJava
{
	sourceCompatibility = targetCompatibility = '1.8'
}

minecraft
{
    version = "${config.minecraft_version}-${config.forge_version}"

	if( file('../run').exists() )
	{
		runDir = "../run/assets"
	}
	else
	{
		runDir = "assets"
	}

    mappings = "${config.mappings_version}"
}

repositories
{
	maven
	{
    	// location of the maven that hosts JEI files
    	name = "Progwml6 maven"
    	url = "http://dvs1.progwml6.com/files/maven"
  	}
  	maven
  	{
    	// location of a maven mirror for JEI files, as a fallback
    	name = "ModMaven"
    	url = "modmaven.k-4u.nl"
  	}
	//ivy
	//{
    //    name "Botania"
    //    artifactPattern "http://botaniamod.net/files/deobf/[module] [revision]-[classifier].[ext]"
    //}
    //ivy
    //{
    //    name "Thaumcraft"
    //    url "https://dl.dropboxusercontent.com/u/47135879"
    //    layout "pattern",
    //    {
    //    	artifact "[module]-[revision].[ext]"
    //    }
    //}
}

dependencies
{
    //runtime "com.azanor.baubles:Baubles:${config.baubles_version}-deobf"

    //compile name: "Botania"           , group: "vazkii.botania", version: botania_version, classifier: "deobf"

	// compile against the JEI API but do not include it at runtime
	deobfProvided "mezz.jei:jei_${config.minecraft_version}:${config.jei_version}:api"
	// at runtime, use the full JEI jar
	runtime "mezz.jei:jei_${config.minecraft_version}:${config.jei_version}"
}


sourceSets
{
    main
    {
        java
        {
        	srcDirs 'src/main/java'
        }
        resources
        {
        	srcDirs 'src/main/resources'
        }
    }
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs)
    {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs)
    {
        exclude 'mcmod.info'
        exclude '*.xcf'
        exclude '*.wav'
    }
}
